/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKPUMP_H
#define _MOCKPUMP_H

#include "Pump.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockPump_Init(void);
void MockPump_Destroy(void);
void MockPump_Verify(void);




#define PumpActivate_IgnoreAndReturn(cmock_retval) PumpActivate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void PumpActivate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define PumpActivate_ExpectAnyArgsAndReturn(cmock_retval) PumpActivate_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void PumpActivate_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define PumpActivate_ExpectAndReturn(cmock_arg1, cmock_retval) PumpActivate_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_retval)
void PumpActivate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_arg1, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_PumpActivate_CALLBACK)(bool_t cmock_arg1, int cmock_num_calls);
void PumpActivate_StubWithCallback(CMOCK_PumpActivate_CALLBACK Callback);
#define PumpActivate_IgnoreArg_cmock_arg1() PumpActivate_CMockIgnoreArg_cmock_arg1(__LINE__)
void PumpActivate_CMockIgnoreArg_cmock_arg1(UNITY_LINE_TYPE cmock_line);
#define isPumpActivated_IgnoreAndReturn(cmock_retval) isPumpActivated_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void isPumpActivated_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define isPumpActivated_ExpectAnyArgsAndReturn(cmock_retval) isPumpActivated_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void isPumpActivated_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define isPumpActivated_ExpectAndReturn(cmock_retval) isPumpActivated_CMockExpectAndReturn(__LINE__, cmock_retval)
void isPumpActivated_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
typedef bool_t (* CMOCK_isPumpActivated_CALLBACK)(int cmock_num_calls);
void isPumpActivated_StubWithCallback(CMOCK_isPumpActivated_CALLBACK Callback);

#endif
