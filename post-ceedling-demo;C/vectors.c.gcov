        -:    0:Source:src/vectors.c
        -:    0:Graph:vectors.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:#include <stdlib.h>
        -:    2:
        -:    3:#include "vectors.h"
        -:    4:
        -:    5:#include "..\test\support\vector_helper.h"
        -:    6:
    #####:    7:vectorPtr initVector(int x, int y) {
    #####:    8:	vectorPtr ptr = (vectorPtr)malloc(sizeof(struct Vector));
    #####:    9:	if (ptr) {
    %%%%%:    9-block  0
    #####:   10:		ptr->x = x;
    #####:   11:		ptr->y = y;
    %%%%%:   11-block  0
        -:   12:	}
    #####:   13:	return ptr;
    %%%%%:   13-block  0
        -:   14:}
        -:   15:
    #####:   16:void destroyVector(vectorPtr *ptr) {
    #####:   17:	if (!*ptr) {
    %%%%%:   17-block  0
    #####:   18:		return;
    %%%%%:   18-block  0
        -:   19:	}
    #####:   20:	free((void*)*ptr);
    #####:   21:	*ptr = NULL;
    %%%%%:   21-block  0
        -:   22:}
        -:   23:
    #####:   24:vectorPtr sumVectors(const vectorPtr a, const vectorPtr b) {
    #####:   25:	if (!a || !b) {
    %%%%%:   25-block  0
    %%%%%:   25-block  1
    #####:   26:		return NULL;
    %%%%%:   26-block  0
        -:   27:	}
        -:   28:
    #####:   29:	vectorPtr new2DVec = initVector(0, 0);
    %%%%%:   29-block  0
    #####:   30:	if (!new2DVec) {
    #####:   31:		return NULL;
    %%%%%:   31-block  0
        -:   32:	}
    #####:   33:	new2DVec->x = a->x + b->x;
    #####:   34:	new2DVec->y = a->y + b->y;
    #####:   35:	return new2DVec;
    %%%%%:   35-block  0
        -:   36:}
        -:   37:
    #####:   38:int cmpVectors(const vectorPtr a, const vectorPtr b) {
    #####:   39:	if (!a && !b) {
    %%%%%:   39-block  0
    %%%%%:   39-block  1
    #####:   40:		return 0;
    %%%%%:   40-block  0
        -:   41:	}
    #####:   42:	if (!a || !b) {
    %%%%%:   42-block  0
    %%%%%:   42-block  1
    #####:   43:		return -1;
    %%%%%:   43-block  0
        -:   44:	}
        -:   45:	int diff;
    #####:   46:	diff = a->x - b->x;
    #####:   47:	if (diff) {
    %%%%%:   47-block  0
    #####:   48:		return diff;
    %%%%%:   48-block  0
        -:   49:	}
    #####:   50:	diff = a->y - b->y;
    #####:   51:	return diff;
    %%%%%:   51-block  0
        -:   52:}
