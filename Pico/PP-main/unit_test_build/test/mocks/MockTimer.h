/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTIMER_H
#define _MOCKTIMER_H

#include "Timer.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockTimer_Init(void);
void MockTimer_Destroy(void);
void MockTimer_Verify(void);




#define PM_Delay_Ignore() PM_Delay_CMockIgnore()
void PM_Delay_CMockIgnore(void);
#define PM_Delay_ExpectAnyArgs() PM_Delay_CMockExpectAnyArgs(__LINE__)
void PM_Delay_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define PM_Delay_Expect(cmock_arg1) PM_Delay_CMockExpect(__LINE__, cmock_arg1)
void PM_Delay_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t cmock_arg1);
typedef void (* CMOCK_PM_Delay_CALLBACK)(uint32_t cmock_arg1, int cmock_num_calls);
void PM_Delay_StubWithCallback(CMOCK_PM_Delay_CALLBACK Callback);
#define PM_Delay_IgnoreArg_cmock_arg1() PM_Delay_CMockIgnoreArg_cmock_arg1(__LINE__)
void PM_Delay_CMockIgnoreArg_cmock_arg1(UNITY_LINE_TYPE cmock_line);
#define PM_GetT1Flag_IgnoreAndReturn(cmock_retval) PM_GetT1Flag_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void PM_GetT1Flag_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define PM_GetT1Flag_ExpectAnyArgsAndReturn(cmock_retval) PM_GetT1Flag_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void PM_GetT1Flag_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define PM_GetT1Flag_ExpectAndReturn(cmock_retval) PM_GetT1Flag_CMockExpectAndReturn(__LINE__, cmock_retval)
void PM_GetT1Flag_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
typedef bool_t (* CMOCK_PM_GetT1Flag_CALLBACK)(int cmock_num_calls);
void PM_GetT1Flag_StubWithCallback(CMOCK_PM_GetT1Flag_CALLBACK Callback);
#define TimerCounters_Init_Ignore() TimerCounters_Init_CMockIgnore()
void TimerCounters_Init_CMockIgnore(void);
#define TimerCounters_Init_ExpectAnyArgs() TimerCounters_Init_CMockExpectAnyArgs(__LINE__)
void TimerCounters_Init_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define TimerCounters_Init_Expect() TimerCounters_Init_CMockExpect(__LINE__)
void TimerCounters_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_TimerCounters_Init_CALLBACK)(int cmock_num_calls);
void TimerCounters_Init_StubWithCallback(CMOCK_TimerCounters_Init_CALLBACK Callback);
#define TimerCounter_Start_IgnoreAndReturn(cmock_retval) TimerCounter_Start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void TimerCounter_Start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define TimerCounter_Start_ExpectAnyArgsAndReturn(cmock_retval) TimerCounter_Start_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void TimerCounter_Start_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define TimerCounter_Start_ExpectAndReturn(counterName, counterValue, cmock_retval) TimerCounter_Start_CMockExpectAndReturn(__LINE__, counterName, counterValue, cmock_retval)
void TimerCounter_Start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, CounterName_t counterName, uint32_t counterValue, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_TimerCounter_Start_CALLBACK)(CounterName_t counterName, uint32_t counterValue, int cmock_num_calls);
void TimerCounter_Start_StubWithCallback(CMOCK_TimerCounter_Start_CALLBACK Callback);
#define TimerCounter_Start_IgnoreArg_counterName() TimerCounter_Start_CMockIgnoreArg_counterName(__LINE__)
void TimerCounter_Start_CMockIgnoreArg_counterName(UNITY_LINE_TYPE cmock_line);
#define TimerCounter_Start_IgnoreArg_counterValue() TimerCounter_Start_CMockIgnoreArg_counterValue(__LINE__)
void TimerCounter_Start_CMockIgnoreArg_counterValue(UNITY_LINE_TYPE cmock_line);
#define TimerCounter_Disable_IgnoreAndReturn(cmock_retval) TimerCounter_Disable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void TimerCounter_Disable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define TimerCounter_Disable_ExpectAnyArgsAndReturn(cmock_retval) TimerCounter_Disable_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void TimerCounter_Disable_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define TimerCounter_Disable_ExpectAndReturn(counterName, cmock_retval) TimerCounter_Disable_CMockExpectAndReturn(__LINE__, counterName, cmock_retval)
void TimerCounter_Disable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, CounterName_t counterName, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_TimerCounter_Disable_CALLBACK)(CounterName_t counterName, int cmock_num_calls);
void TimerCounter_Disable_StubWithCallback(CMOCK_TimerCounter_Disable_CALLBACK Callback);
#define TimerCounter_Disable_IgnoreArg_counterName() TimerCounter_Disable_CMockIgnoreArg_counterName(__LINE__)
void TimerCounter_Disable_CMockIgnoreArg_counterName(UNITY_LINE_TYPE cmock_line);
#define TimerCounter_Status_IgnoreAndReturn(cmock_retval) TimerCounter_Status_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void TimerCounter_Status_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, CounterStatus_t cmock_to_return);
#define TimerCounter_Status_ExpectAnyArgsAndReturn(cmock_retval) TimerCounter_Status_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void TimerCounter_Status_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, CounterStatus_t cmock_to_return);
#define TimerCounter_Status_ExpectAndReturn(counterName, cmock_retval) TimerCounter_Status_CMockExpectAndReturn(__LINE__, counterName, cmock_retval)
void TimerCounter_Status_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, CounterName_t counterName, CounterStatus_t cmock_to_return);
typedef CounterStatus_t (* CMOCK_TimerCounter_Status_CALLBACK)(CounterName_t counterName, int cmock_num_calls);
void TimerCounter_Status_StubWithCallback(CMOCK_TimerCounter_Status_CALLBACK Callback);
#define TimerCounter_Status_IgnoreArg_counterName() TimerCounter_Status_CMockIgnoreArg_counterName(__LINE__)
void TimerCounter_Status_CMockIgnoreArg_counterName(UNITY_LINE_TYPE cmock_line);
#define TimerCounter_GetTimeout_IgnoreAndReturn(cmock_retval) TimerCounter_GetTimeout_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void TimerCounter_GetTimeout_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define TimerCounter_GetTimeout_ExpectAnyArgsAndReturn(cmock_retval) TimerCounter_GetTimeout_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void TimerCounter_GetTimeout_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define TimerCounter_GetTimeout_ExpectAndReturn(counterName, cmock_retval) TimerCounter_GetTimeout_CMockExpectAndReturn(__LINE__, counterName, cmock_retval)
void TimerCounter_GetTimeout_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, CounterName_t counterName, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_TimerCounter_GetTimeout_CALLBACK)(CounterName_t counterName, int cmock_num_calls);
void TimerCounter_GetTimeout_StubWithCallback(CMOCK_TimerCounter_GetTimeout_CALLBACK Callback);
#define TimerCounter_GetTimeout_IgnoreArg_counterName() TimerCounter_GetTimeout_CMockIgnoreArg_counterName(__LINE__)
void TimerCounter_GetTimeout_CMockIgnoreArg_counterName(UNITY_LINE_TYPE cmock_line);

#endif
