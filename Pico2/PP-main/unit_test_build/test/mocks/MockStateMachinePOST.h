/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSTATEMACHINEPOST_H
#define _MOCKSTATEMACHINEPOST_H

#include "StateMachinePOST.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockStateMachinePOST_Init(void);
void MockStateMachinePOST_Destroy(void);
void MockStateMachinePOST_Verify(void);




#define POST_Run_IgnoreAndReturn(cmock_retval) POST_Run_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void POST_Run_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define POST_Run_ExpectAnyArgsAndReturn(cmock_retval) POST_Run_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void POST_Run_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define POST_Run_ExpectAndReturn(aCurrentStateOnEntry, aNewState, cmock_retval) POST_Run_CMockExpectAndReturn(__LINE__, aCurrentStateOnEntry, aNewState, cmock_retval)
void POST_Run_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool_t aCurrentStateOnEntry, State_t* aNewState, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_POST_Run_CALLBACK)(bool_t aCurrentStateOnEntry, State_t* aNewState, int cmock_num_calls);
void POST_Run_StubWithCallback(CMOCK_POST_Run_CALLBACK Callback);
#define POST_Run_ExpectWithArrayAndReturn(aCurrentStateOnEntry, aNewState, aNewState_Depth, cmock_retval) POST_Run_CMockExpectWithArrayAndReturn(__LINE__, aCurrentStateOnEntry, aNewState, aNewState_Depth, cmock_retval)
void POST_Run_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, bool_t aCurrentStateOnEntry, State_t* aNewState, int aNewState_Depth, ErrorCode_t cmock_to_return);
#define POST_Run_ReturnThruPtr_aNewState(aNewState) POST_Run_CMockReturnMemThruPtr_aNewState(__LINE__, aNewState, sizeof(*aNewState))
#define POST_Run_ReturnArrayThruPtr_aNewState(aNewState, cmock_len) POST_Run_CMockReturnMemThruPtr_aNewState(__LINE__, aNewState, (int)(cmock_len * (int)sizeof(*aNewState)))
#define POST_Run_ReturnMemThruPtr_aNewState(aNewState, cmock_size) POST_Run_CMockReturnMemThruPtr_aNewState(__LINE__, aNewState, cmock_size)
void POST_Run_CMockReturnMemThruPtr_aNewState(UNITY_LINE_TYPE cmock_line, State_t* aNewState, int cmock_size);
#define POST_Run_IgnoreArg_aCurrentStateOnEntry() POST_Run_CMockIgnoreArg_aCurrentStateOnEntry(__LINE__)
void POST_Run_CMockIgnoreArg_aCurrentStateOnEntry(UNITY_LINE_TYPE cmock_line);
#define POST_Run_IgnoreArg_aNewState() POST_Run_CMockIgnoreArg_aNewState(__LINE__)
void POST_Run_CMockIgnoreArg_aNewState(UNITY_LINE_TYPE cmock_line);
#define POST_Init_IgnoreAndReturn(cmock_retval) POST_Init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void POST_Init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define POST_Init_ExpectAnyArgsAndReturn(cmock_retval) POST_Init_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void POST_Init_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define POST_Init_ExpectAndReturn(cmock_retval) POST_Init_CMockExpectAndReturn(__LINE__, cmock_retval)
void POST_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_POST_Init_CALLBACK)(int cmock_num_calls);
void POST_Init_StubWithCallback(CMOCK_POST_Init_CALLBACK Callback);

#endif
