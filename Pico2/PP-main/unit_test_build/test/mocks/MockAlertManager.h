/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKALERTMANAGER_H
#define _MOCKALERTMANAGER_H

#include "AlertManager.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockAlertManager_Init(void);
void MockAlertManager_Destroy(void);
void MockAlertManager_Verify(void);




#define AlertManager_Init_IgnoreAndReturn(cmock_retval) AlertManager_Init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AlertManager_Init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define AlertManager_Init_ExpectAnyArgsAndReturn(cmock_retval) AlertManager_Init_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void AlertManager_Init_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define AlertManager_Init_ExpectAndReturn(cmock_retval) AlertManager_Init_CMockExpectAndReturn(__LINE__, cmock_retval)
void AlertManager_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_AlertManager_Init_CALLBACK)(int cmock_num_calls);
void AlertManager_Init_StubWithCallback(CMOCK_AlertManager_Init_CALLBACK Callback);
#define AlertManager_Run_IgnoreAndReturn(cmock_retval) AlertManager_Run_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AlertManager_Run_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define AlertManager_Run_ExpectAnyArgsAndReturn(cmock_retval) AlertManager_Run_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void AlertManager_Run_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
#define AlertManager_Run_ExpectAndReturn(cmock_retval) AlertManager_Run_CMockExpectAndReturn(__LINE__, cmock_retval)
void AlertManager_Run_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ErrorCode_t cmock_to_return);
typedef ErrorCode_t (* CMOCK_AlertManager_Run_CALLBACK)(int cmock_num_calls);
void AlertManager_Run_StubWithCallback(CMOCK_AlertManager_Run_CALLBACK Callback);
#define StartLEDSequence_Ignore() StartLEDSequence_CMockIgnore()
void StartLEDSequence_CMockIgnore(void);
#define StartLEDSequence_ExpectAnyArgs() StartLEDSequence_CMockExpectAnyArgs(__LINE__)
void StartLEDSequence_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define StartLEDSequence_Expect(seq) StartLEDSequence_CMockExpect(__LINE__, seq)
void StartLEDSequence_CMockExpect(UNITY_LINE_TYPE cmock_line, LEDControl_t seq);
typedef void (* CMOCK_StartLEDSequence_CALLBACK)(LEDControl_t seq, int cmock_num_calls);
void StartLEDSequence_StubWithCallback(CMOCK_StartLEDSequence_CALLBACK Callback);
#define StartLEDSequence_IgnoreArg_seq() StartLEDSequence_CMockIgnoreArg_seq(__LINE__)
void StartLEDSequence_CMockIgnoreArg_seq(UNITY_LINE_TYPE cmock_line);
#define checkLEDSequenceCompleted_IgnoreAndReturn(cmock_retval) checkLEDSequenceCompleted_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void checkLEDSequenceCompleted_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define checkLEDSequenceCompleted_ExpectAnyArgsAndReturn(cmock_retval) checkLEDSequenceCompleted_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void checkLEDSequenceCompleted_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define checkLEDSequenceCompleted_ExpectAndReturn(cmock_retval) checkLEDSequenceCompleted_CMockExpectAndReturn(__LINE__, cmock_retval)
void checkLEDSequenceCompleted_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
typedef bool_t (* CMOCK_checkLEDSequenceCompleted_CALLBACK)(int cmock_num_calls);
void checkLEDSequenceCompleted_StubWithCallback(CMOCK_checkLEDSequenceCompleted_CALLBACK Callback);

#endif
